name: (R) Update package.json

on:
  workflow_call:
    inputs:
      file-path:
        description: "package.json path to update. You can input multiline paths."
        required: true
        type: string
      tag:
        description: "git tag you want create. (sample 1.0.0)"
        required: true
        type: string
      dry-run:
        description: "true to simularate commit but not push change."
        required: true
        type: boolean
      skip-validate:
        description: "true to skip validation."
        type: boolean
        default: false
      push-tag:
        description: "true = push tag. false = no push tag."
        required: false
        type: boolean
        default: true
    outputs:
      sha:
        description: "Git commit sha after package.json has changed."
        value: ${{ jobs.update-packagejson.outputs.sha }}
      branch-name:
        description: Git branch name created.
        value: ${{ jobs.update-packagejson.outputs.branch-name }}
      is-branch-created:
        description: Indicate is Git branch created or not.
        value: ${{ jobs.update-packagejson.outputs.is-branch-created }}

jobs:
  update-packagejson:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      sha: ${{ steps.commit.outputs.sha }}
      branch-name: ${{ steps.configure.outputs.branch-name }}
      is-branch-created: ${{ steps.configure.outputs.is-branch-created }}
    steps:
      - name: Configure Output variables
        id: configure
        run: |
          echo "git-tag=${{ inputs.tag }}" | tee -a "$GITHUB_OUTPUT"
          echo "dry-run=${{ inputs.dry-run }}" | tee -a "$GITHUB_OUTPUT"
          echo "branch-name=test-release-${{ inputs.tag }}" | tee -a "$GITHUB_OUTPUT"
          echo "is-branch-created=${{ inputs.dry-run }}" | tee -a "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4

      - name: Update package.json to version ${{ steps.configure.outputs.git-tag }}
        run: |
          while read -r file_path; do
            echo "::group::Before"
              cat "$file_path"
            echo "::endgroup::"

            echo "::group::Updating $file_path"
              sed -i -e "s/\(\"version\":\) \"\(.*\)\",/\1 \"${{ steps.configure.outputs.git-tag }}\",/" ${file_path}
            echo "::endgroup::"

            echo "::group::After"
              cat "$file_path"
            echo "::endgroup::"
          done <<< "${{ inputs.file-path }}"

      - name: Validate pckage.json is updated as expected
        if: ${{ !inputs.skip-validate }}
        run: |
          while read -r file_path; do
            actual=$(grep "version" "$file_path" | cut -d ':' -f 2 | tr -d ',' | tr -d '"' | tr -d ' ')
            expected="${{ steps.configure.outputs.git-tag }}"
            if [[ "$actual" != "$expected" ]]; then
              echo "Failed. Expected $expected but got $actual. path: $file_path"
              exit 1
            else
              echo "Success. Expected $expected and got $actual. path: $file_path"
            fi
          done <<< "${{ inputs.file-path }}"

      - name: Check update
        id: check_update
        run: git diff --exit-code || echo "changed=1" | tee -a "$GITHUB_OUTPUT"

      - name: Commit files
        id: commit
        if: ${{ steps.check_update.outputs.changed == '1' }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "feat: Update package.json to ${{ steps.configure.outputs.git-tag }}" -a
          echo "sha=$(git rev-parse HEAD)" | tee -a "$GITHUB_OUTPUT"

      - name: Create Tag
        if: ${{ steps.check_update.outputs.changed == '1' && inputs.push-tag }}
        run: git tag ${{ steps.configure.outputs.git-tag }}

      - name: Push changes
        if: ${{ steps.configure.outputs.dry-run == 'false' && steps.check_update.outputs.changed == '1' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: ${{ inputs.push-tag }}

      - name: Push changes (dry-run)
        if: ${{ steps.configure.outputs.dry-run == 'true' && steps.check_update.outputs.changed == '1' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.configure.outputs.branch-name }}
          tags: false
