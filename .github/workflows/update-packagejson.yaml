name: (R) Update package.json

on:
  workflow_call:
    inputs:
      file-path:
        description: "package.json path to update."
        required: true
        type: string
      tag:
        description: "git tag you want create. (sample 1.0.0)"
        required: true
        type: string
      dry-run:
        description: "true to simularate commit but not push change."
        required: true
        type: boolean
    outputs:
      sha:
        descrition: "Git commit sha after package.json has changed."
        value: ${{ jobs.update-packagejson.outputs.sha }}
      branch-name:
        description: Git branch name created.
        value: ${{ jobs.update-packagejson.outputs.branch-name }}
      is-branch-created:
        description: Indicate is Git branch created or not.
        value: ${{ jobs.update-packagejson.outputs.is-branch-created }}

env:
  DRY_RUN_BRANCH_PREFIX: "test_release"

jobs:
  update-packagejson:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      sha: ${{ steps.commit.outputs.sha }}
      branch-name: ${{ steps.env.outputs.branch-name }}
      is-branch-created: ${{ steps.env.outputs.is-branch-created }}
    steps:
      - name: Configure Environment Variables
        id: env
        run: |
          echo "FILE_PATH=${{ inputs.file-path }}" | tee -a "$GITHUB_ENV"
          echo "GIT_TAG=${{ inputs.tag }}" | tee -a "$GITHUB_ENV"
          echo "DRY_RUN=${{ inputs.dry-run }}" | tee -a "$GITHUB_ENV"
          echo "::set-output name=branch-name::${{ env.DRY_RUN_BRANCH_PREFIX }}-${{ inputs.tag }}"
          echo "::set-output name=is-branch-created::${{ inputs.dry-run }}"

      - uses: actions/checkout@v3

      - name: Output package.json (Before)
        run: cat ${{ env.FILE_PATH}}

      - name: Update package.json to version ${{ env.GIT_TAG }}
        run: sed -i -e "s/\(\"version\":\) \"\(.*\)\",/\1 \"${{ env.GIT_TAG }}\",/" ${{ env.FILE_PATH }}

      - name: Check update
        id: check_update
        run: |
          cat ${{ env.FILE_PATH}}
          git diff --exit-code || echo "::set-output name=changed::1"

      - name: Commit files
        id: commit
        if: steps.check_update.outputs.changed == '1'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "feat: Update package.json to ${{ env.GIT_TAG }}" -a
          echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Check sha
        run: echo "SHA ${SHA}"
        env:
          SHA: ${{ steps.commit.outputs.sha }}

      - name: Create Tag
        if: steps.check_update.outputs.changed == '1'
        run: git tag ${{ env.GIT_TAG }}

      - name: Push changes
        if: env.DRY_RUN == 'false' && steps.check_update.outputs.changed == '1'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Push changes (dry_run)
        if: env.DRY_RUN == 'true' && steps.check_update.outputs.changed == '1'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.env.outputs.branch-name }}
          tags: false
