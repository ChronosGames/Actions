name: (R) Validate Tag

on:
  workflow_call:
    inputs:
      fail-on-invalid:
        description: "fail-on-invalid: allow old tag or not"
        required: false
        default: false
        type: boolean
      tag:
        description: "tag: tag to validate"
        required: true
        type: string
    outputs:
      tag:
        description: input tag
        value: ${{ jobs.validate.outputs.tag }}
      validated:
        description: result of the validation is validated or not
        value: ${{ jobs.validate.outputs.validated }}
  workflow_dispatch:
    inputs:
      fail-on-invalid:
        description: "fail-on-invalid: allow old tag or not"
        required: false
        default: false
        type: boolean
      tag:
        description: "tag: tag to validate"
        required: true
        type: string

permissions:
  contents: read
  actions: read

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      tag: ${{ steps.validate.outputs.tag }}
      validated: ${{ steps.validate.outputs.validated }}
    steps:
      # Only check released tag, allow override draft and pre-release. Old to new sort by version number.
      - name: Validate tag is not reverting
        shell: bash
        id: validate
        run: |
          echo "tag=${{ inputs.tag }}" | tee -a "$GITHUB_OUTPUT"

          release_latest=$(gh release list --exclude-drafts --exclude-pre-releases --json tagName,isLatest | jq -c -r ".[] | select(.isLatest == true) | .tagName")
          sorted_latest=$(echo -e "${release_latest}\n${{ inputs.tag }}" | sort -V | tail -n 1)
          if [[ "$release_latest" == "" ]]; then
            echo "There is not release tag."
            echo "validated=true" | tee -a "$GITHUB_OUTPUT"
          elif [[ "$sorted_latest" == "$release_latest" ]]; then
            echo "Tag is reverting to old version. Please bump the version. tag: ${{ inputs.tag }}, latest: $release_latest"
            echo "validated=false" | tee -a "$GITHUB_OUTPUT"

            if [[ "${{ inputs.fail-on-invalid }}" == "true" ]]; then
              exit 1
            fi
          else
            echo "Great, tag is latest. tag: ${{ inputs.tag }}, latest: $release_latest"
            echo "validated=true" | tee -a "$GITHUB_OUTPUT"
          fi
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
