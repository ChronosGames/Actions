name: (R) Create Release

on:
  workflow_call:
    inputs:
      commit-id:
        description: "CommitId to create release & tag."
        required: true
        type: string
      tag:
        description: "Git tag to create. (sample 1.0.0)"
        required: true
        type: string
      push-tag:
        description: "true = push tag. false = no push tag."
        required: false
        type: boolean
        default: false
      # nuget
      nuget-push:
        description: "true = upload nuget package. false = not upload"
        required: false
        type: boolean
        default: false
      nuget-path:
        description: "nuget path to upload."
        required: false
        type: string
        default: "./nuget/*.nupkg"
      # unity
      unitypackage-upload:
        description: "true = upload unitypackage. false = not upload"
        required: false
        type: boolean
        default: false
      unitypackage-name:
        description: "unitypackage name to upload."
        required: false
        type: string
      unitypackage-path:
        description: "unitypackage path to upload."
        required: false
        type: string
      dry-run:
        description: "true = no upload. false = dry run changes."
        required: true
        type: boolean

jobs:
  create-relase:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Validate inputs - unitypackage
        shell: bash
        if: ${{ inputs.unitypackage-upload && (inputs.unitypackage-name == '' || inputs.unitypackage-path == '') }}
        run: |
          echo "inputs validation error! Don't leave 'inputs.unitypackage-name' and 'inputs.unitypackage-path' blank when 'inputs.unitypackage-upload' is true."
          exit 1

      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        if: ${{ inputs.nuget-push }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-id }}
        if: ${{ inputs.push-tag }}

      # Download(All) Artifacts to current directory
      - uses: actions/download-artifact@v3
      - name: Show download aritifacts
        run: ls -lR
      - name: Validate package exists in artifact - unitypackage
        if: ${{ inputs.unitypackage-upload }}
        run: |
          if [[ ! -f "${{ inputs.unitypackage-path }}" ]]; then
            echo "Specified .unitypackage not found. path: ${{ inputs.unitypackage-path }}"
            exit 1
          fi
      - name: Validate package exists in artifact - NuGet
        if: ${{ inputs.nuget-push }}
        run: |
          if ! ls -l ${{ inputs.nuget-path }}; then
            echo "Specified .nupkg not found. path: ${{ inputs.nuget-path }}"
            exit 1
          fi

      # Upload to NuGet
      - name: Upload to NuGet (Duplicate is skipped)
        if: ${{ inputs.nuget-push }}
        run: |
          if [[ "${{ inputs.dry-run }}" == "true" ]]; then
            echo '(dry run) dotnet nuget push "${{ inputs.nuget-path }}" --skip-duplicate -s https://www.nuget.org/api/v2/package -k "${{ secrets.NUGET_KEY }}"'
          else
            dotnet nuget push "${{ inputs.nuget-path }}" --skip-duplicate -s https://www.nuget.org/api/v2/package -k "${{ secrets.NUGET_KEY }}"
          fi

      # Create Releases
      - name: Create Tag
        run: git tag ${{ inputs.tag }}
      - name: Push Tag
        run: git push origin ${{ inputs.tag }}
        if: ${{ !inputs.dry-run && inputs.push-tag }}
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.tag }}
          release_name: Ver.${{ inputs.tag }}
          commitish: ${{ inputs.commit-id }}
          draft: true
          prerelease: false
        if: ${{ !inputs.dry-run }}

      # Upload to Releases(unitypackage)
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ${{ inputs.unitypackage-name }}
          asset_path: ${{ inputs.unitypackage-path }}
          asset_content_type: application/octet-stream
        if: ${{ !inputs.dry-run && inputs.unitypackage-upload }}
