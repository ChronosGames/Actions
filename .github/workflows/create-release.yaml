name: (R) Create Release

on:
  workflow_call:
    inputs:
      commit-id:
        description: "CommitId to create release & tag."
        required: true
        type: string
      tag:
        description: "Git tag to create. (sample 1.0.0)"
        required: true
        type: string
      push-tag: # todo: いらなくなったので消す
        description: "true = push tag. false = no push tag."
        required: false
        type: boolean
        default: false
      # nuget
      nuget-push:
        description: "true = upload nuget package. false = not upload"
        required: false
        type: boolean
        default: false
      nuget-path:
        description: "nuget path to upload."
        required: false
        type: string
        default: "./nuget/*.nupkg"
      # unity
      unitypackage-upload:
        description: "true = upload unitypackage. false = not upload"
        required: false
        type: boolean
        default: false
      unitypackage-name: # todo: いらなくなったので消す
        description: "unitypackage name to upload."
        required: false
        type: string
      unitypackage-path:
        description: "unitypackage path to upload."
        required: false
        type: string
      dry-run:
        description: "true = no upload. false = dry run changes."
        required: true
        type: boolean

jobs:
  create-relase:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Validate inputs - unitypackage
        shell: bash
        if: ${{ inputs.unitypackage-upload && inputs.unitypackage-path == '' }}
        run: |
          echo "Validation error! 'inputs.unitypackage-path' cannot be blank when 'inputs.unitypackage-upload' is true."
          exit 1

      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        if: ${{ inputs.nuget-push }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-id }}

      # Download(All) Artifacts to current directory
      - uses: actions/download-artifact@v3
      - name: Show download aritifacts
        run: ls -lR
      - name: Validate package exists in artifact - unitypackage
        if: ${{ inputs.unitypackage-upload }}
        run: |
          if [[ ! -f "${{ inputs.unitypackage-path }}" ]]; then
            echo "Specified .unitypackage not found. path: ${{ inputs.unitypackage-path }}"
            exit 1
          fi
      - name: Validate package exists in artifact - NuGet
        if: ${{ inputs.nuget-push }}
        run: |
          if ! ls -l ${{ inputs.nuget-path }}; then
            echo "Specified .nupkg not found. path: ${{ inputs.nuget-path }}"
            exit 1
          fi

      # Create Releases
      - name: Create Tag
        run: |
          git tag ${{ inputs.tag }}
          git push origin ${{ inputs.tag }}
      - name: Create Release
        run: gh release create ${{ inputs.tag }} --draft --verify-tag --title "Ver.${{ inputs.tag }}" --generate-notes
      - name: Upload .unitypacakge file to release
        run: gh release upload ${{ inputs.tag }} ${{ inputs.unitypackage-path }}
        if: ${{ inputs.unitypackage-upload }}

      # Upload to NuGet
      - name: Upload to NuGet (DryRun=${{ inputs.dry-run }})
        if: ${{ inputs.nuget-push }}
        run: |
          if [[ "${{ inputs.dry-run }}" == "true" ]]; then
            echo '(dry run) dotnet nuget push "${{ inputs.nuget-path }}" --skip-duplicate -s https://www.nuget.org/api/v2/package -k "${{ secrets.NUGET_KEY }}"'
          else
            dotnet nuget push "${{ inputs.nuget-path }}" --skip-duplicate -s https://www.nuget.org/api/v2/package -k "${{ secrets.NUGET_KEY }}"
          fi

      # Clean up
      - name: Clean up. Wait 60s and delete releas if dry-run or failure. (dry-run=${{ inputs.dry-run }}})
        if: ${{ inputs.dry-run || failure() }}
        run: |
          if gh release list | grep Draft | grep ${{ inputs.tag }}; then
            sleep 60
            gh release delete ${{ inputs.tag }} --yes --cleanup-tag
          fi
