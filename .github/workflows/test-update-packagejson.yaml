name: Test update-packagejson

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: GitHub Tag to release. ex) 1.1.0"
        required: true
        default: ""
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  update-packagejson:
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/update-packagejson.yaml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
      file-path: |
        ./Sandbox/Sandbox.Unity/Assets/Plugins/Foo/package.json
        ./Sandbox/Sandbox.Unity/Assets/Plugins/Foo.Plugin/package.json
        ./Sandbox/Sandbox.Godot/addons/Foo/plugin.cfg
      tag: "${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.0.{0}', github.run_id) }}"
      dry-run: true

  cleanup:
    if: ${{ needs.update-packagejson.outputs.is-branch-created == 'true' }}
    needs: [update-packagejson]
    uses: ./.github/workflows/clean-packagejson-branch.yaml
    with:
      branch: ${{ needs.update-packagejson.outputs.branch-name }}

  update-packagejson2:
    if: ${{ github.actor != 'dependabot[bot]' }}
    needs: [update-packagejson]
    uses: ./.github/workflows/update-packagejson.yaml
    with:
      ref: ${{ needs.update-packagejson.outputs.sha }}
      file-path: |
        ./Sandbox/Sandbox.Unity/Assets/Plugins/Foo/package.json
        ./Sandbox/Sandbox.Unity/Assets/Plugins/Foo.Plugin/package.json
        ./Sandbox/Sandbox.Godot/addons/Foo/plugin.cfg
      tag: "${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.0.{0}', github.run_id) }}"
      dry-run: true

  test:
    needs: [update-packagejson, update-packagejson2]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check update-packagejson with new version should update commit id
        run: |
          tag=${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.0.{0}', github.run_id) }}
          echo "DEBUG: tag                : ${tag}"
          echo "DEBUG: github.sha         : ${{ github.sha }}"
          echo "DEBUG: update-packagejson : ${{ needs.update-packagejson.outputs.sha }}"
          echo "DEBUG: update-packagejson2: ${{ needs.update-packagejson2.outputs.sha }}"

          echo -n "FACT: sha for update-packagejson should be updated. "
          [[ "${{ needs.update-packagejson.outputs.sha }}" != "${{ github.sha }}" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)
          echo -n "FACT: sha for update-packagejson2 should be updated. "
          [[ "${{ needs.update-packagejson2.outputs.sha }}" != "${{ github.sha }}" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)
          echo -n "FACT: sha for update-packagejson and update-packagejson2 should have same commit id. "
          [[ "${{ needs.update-packagejson.outputs.sha }}" == "${{ needs.update-packagejson2.outputs.sha }}" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)

          echo -n "FACT: is-branch-created for update-packagejson should be created. "
          [[ "${{ needs.update-packagejson.outputs.is-branch-created }}" == "true" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)
          echo -n "FACT: is-branch-created for update-packagejson2 should be not created. "
          [[ "${{ needs.update-packagejson2.outputs.is-branch-created }}" == "false" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)

          echo -n "FACT: branch-name for update-packagejson should be exists. "
          [[ "${{ needs.update-packagejson.outputs.branch-name }}" == "test-release/${tag}" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)
          echo -n "FACT: branch-name for update-packagejson2 should be exists. "
          [[ "${{ needs.update-packagejson2.outputs.branch-name }}" == "test-release/${tag}" ]] && echo "[O PASS]" || (echo "[X FAIL]" && exit 1)
